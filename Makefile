# GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=releasewithsymbols_x86_64
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),releasewithsymbols_x86_64)
  gmcl_RTXFixesBinary_config = releasewithsymbols_x86_64
  helpers_config = releasewithsymbols_x86_64
  lua_shared_config = releasewithsymbols_x86_64
  scanning_config = releasewithsymbols_x86_64
  detouring_config = releasewithsymbols_x86_64
  hde_config = releasewithsymbols_x86_64
  minhook_config = releasewithsymbols_x86_64
  common_config = releasewithsymbols_x86_64
  tier1_config = releasewithsymbols_x86_64
  LZMA_config = releasewithsymbols_x86_64
  tier2_config = releasewithsymbols_x86_64
  mathlib_config = releasewithsymbols_x86_64
  helpers_extended_config = releasewithsymbols_x86_64

else ifeq ($(config),releasewithsymbols_x86)
  gmcl_RTXFixesBinary_config = releasewithsymbols_x86
  helpers_config = releasewithsymbols_x86
  lua_shared_config = releasewithsymbols_x86
  scanning_config = releasewithsymbols_x86
  detouring_config = releasewithsymbols_x86
  hde_config = releasewithsymbols_x86
  minhook_config = releasewithsymbols_x86
  common_config = releasewithsymbols_x86
  tier1_config = releasewithsymbols_x86
  LZMA_config = releasewithsymbols_x86
  tier2_config = releasewithsymbols_x86
  mathlib_config = releasewithsymbols_x86
  helpers_extended_config = releasewithsymbols_x86

else ifeq ($(config),release_x86_64)
  gmcl_RTXFixesBinary_config = release_x86_64
  helpers_config = release_x86_64
  lua_shared_config = release_x86_64
  scanning_config = release_x86_64
  detouring_config = release_x86_64
  hde_config = release_x86_64
  minhook_config = release_x86_64
  common_config = release_x86_64
  tier1_config = release_x86_64
  LZMA_config = release_x86_64
  tier2_config = release_x86_64
  mathlib_config = release_x86_64
  helpers_extended_config = release_x86_64

else ifeq ($(config),release_x86)
  gmcl_RTXFixesBinary_config = release_x86
  helpers_config = release_x86
  lua_shared_config = release_x86
  scanning_config = release_x86
  detouring_config = release_x86
  hde_config = release_x86
  minhook_config = release_x86
  common_config = release_x86
  tier1_config = release_x86
  LZMA_config = release_x86
  tier2_config = release_x86
  mathlib_config = release_x86
  helpers_extended_config = release_x86

else ifeq ($(config),debug_x86_64)
  gmcl_RTXFixesBinary_config = debug_x86_64
  helpers_config = debug_x86_64
  lua_shared_config = debug_x86_64
  scanning_config = debug_x86_64
  detouring_config = debug_x86_64
  hde_config = debug_x86_64
  minhook_config = debug_x86_64
  common_config = debug_x86_64
  tier1_config = debug_x86_64
  LZMA_config = debug_x86_64
  tier2_config = debug_x86_64
  mathlib_config = debug_x86_64
  helpers_extended_config = debug_x86_64

else ifeq ($(config),debug_x86)
  gmcl_RTXFixesBinary_config = debug_x86
  helpers_config = debug_x86
  lua_shared_config = debug_x86
  scanning_config = debug_x86
  detouring_config = debug_x86
  hde_config = debug_x86
  minhook_config = debug_x86
  common_config = debug_x86
  tier1_config = debug_x86
  LZMA_config = debug_x86
  tier2_config = debug_x86
  mathlib_config = debug_x86
  helpers_extended_config = debug_x86

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := gmcl_RTXFixesBinary helpers lua_shared scanning detouring hde minhook common tier1 LZMA tier2 mathlib helpers_extended

.PHONY: all clean help $(PROJECTS) SourceSDK garrysmod_common

all: $(PROJECTS)

SourceSDK: LZMA common mathlib tier1 tier2

garrysmod_common: detouring hde helpers helpers_extended lua_shared minhook scanning

gmcl_RTXFixesBinary: lua_shared detouring minhook hde common tier1 LZMA tier2 mathlib helpers_extended helpers scanning
ifneq (,$(gmcl_RTXFixesBinary_config))
	@echo "==== Building gmcl_RTXFixesBinary ($(gmcl_RTXFixesBinary_config)) ===="
	@${MAKE} --no-print-directory -C . -f gmcl_RTXFixesBinary.make config=$(gmcl_RTXFixesBinary_config)
endif

helpers:
ifneq (,$(helpers_config))
	@echo "==== Building helpers ($(helpers_config)) ===="
	@${MAKE} --no-print-directory -C garrysmod_common/projects/macosx/gmake -f helpers.make config=$(helpers_config)
endif

lua_shared:
ifneq (,$(lua_shared_config))
	@echo "==== Building lua_shared ($(lua_shared_config)) ===="
	@${MAKE} --no-print-directory -C garrysmod_common/projects/macosx/gmake -f lua_shared.make config=$(lua_shared_config)
endif

scanning:
ifneq (,$(scanning_config))
	@echo "==== Building scanning ($(scanning_config)) ===="
	@${MAKE} --no-print-directory -C garrysmod_common/scanning/projects/macosx/gmake -f Makefile config=$(scanning_config)
endif

detouring: hde minhook
ifneq (,$(detouring_config))
	@echo "==== Building detouring ($(detouring_config)) ===="
	@${MAKE} --no-print-directory -C garrysmod_common/detouring/projects/macosx/gmake -f detouring.make config=$(detouring_config)
endif

hde:
ifneq (,$(hde_config))
	@echo "==== Building hde ($(hde_config)) ===="
	@${MAKE} --no-print-directory -C garrysmod_common/detouring/projects/macosx/gmake -f hde.make config=$(hde_config)
endif

minhook: hde
ifneq (,$(minhook_config))
	@echo "==== Building minhook ($(minhook_config)) ===="
	@${MAKE} --no-print-directory -C garrysmod_common/detouring/projects/macosx/gmake -f minhook.make config=$(minhook_config)
endif

common:
ifneq (,$(common_config))
	@echo "==== Building common ($(common_config)) ===="
	@${MAKE} --no-print-directory -C garrysmod_common/sourcesdk-minimal/projects/macosx/gmake -f common.make config=$(common_config)
endif

tier1: LZMA
ifneq (,$(tier1_config))
	@echo "==== Building tier1 ($(tier1_config)) ===="
	@${MAKE} --no-print-directory -C garrysmod_common/sourcesdk-minimal/projects/macosx/gmake -f tier1.make config=$(tier1_config)
endif

LZMA:
ifneq (,$(LZMA_config))
	@echo "==== Building LZMA ($(LZMA_config)) ===="
	@${MAKE} --no-print-directory -C garrysmod_common/sourcesdk-minimal/projects/macosx/gmake -f LZMA.make config=$(LZMA_config)
endif

tier2: LZMA
ifneq (,$(tier2_config))
	@echo "==== Building tier2 ($(tier2_config)) ===="
	@${MAKE} --no-print-directory -C garrysmod_common/sourcesdk-minimal/projects/macosx/gmake -f tier2.make config=$(tier2_config)
endif

mathlib:
ifneq (,$(mathlib_config))
	@echo "==== Building mathlib ($(mathlib_config)) ===="
	@${MAKE} --no-print-directory -C garrysmod_common/sourcesdk-minimal/projects/macosx/gmake -f mathlib.make config=$(mathlib_config)
endif

helpers_extended: helpers scanning
ifneq (,$(helpers_extended_config))
	@echo "==== Building helpers_extended ($(helpers_extended_config)) ===="
	@${MAKE} --no-print-directory -C garrysmod_common/projects/macosx/gmake -f helpers_extended.make config=$(helpers_extended_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f gmcl_RTXFixesBinary.make clean
	@${MAKE} --no-print-directory -C garrysmod_common/projects/macosx/gmake -f helpers.make clean
	@${MAKE} --no-print-directory -C garrysmod_common/projects/macosx/gmake -f lua_shared.make clean
	@${MAKE} --no-print-directory -C garrysmod_common/scanning/projects/macosx/gmake -f Makefile clean
	@${MAKE} --no-print-directory -C garrysmod_common/detouring/projects/macosx/gmake -f detouring.make clean
	@${MAKE} --no-print-directory -C garrysmod_common/detouring/projects/macosx/gmake -f hde.make clean
	@${MAKE} --no-print-directory -C garrysmod_common/detouring/projects/macosx/gmake -f minhook.make clean
	@${MAKE} --no-print-directory -C garrysmod_common/sourcesdk-minimal/projects/macosx/gmake -f common.make clean
	@${MAKE} --no-print-directory -C garrysmod_common/sourcesdk-minimal/projects/macosx/gmake -f tier1.make clean
	@${MAKE} --no-print-directory -C garrysmod_common/sourcesdk-minimal/projects/macosx/gmake -f LZMA.make clean
	@${MAKE} --no-print-directory -C garrysmod_common/sourcesdk-minimal/projects/macosx/gmake -f tier2.make clean
	@${MAKE} --no-print-directory -C garrysmod_common/sourcesdk-minimal/projects/macosx/gmake -f mathlib.make clean
	@${MAKE} --no-print-directory -C garrysmod_common/projects/macosx/gmake -f helpers_extended.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  releasewithsymbols_x86_64"
	@echo "  releasewithsymbols_x86"
	@echo "  release_x86_64"
	@echo "  release_x86"
	@echo "  debug_x86_64"
	@echo "  debug_x86"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   gmcl_RTXFixesBinary"
	@echo "   helpers"
	@echo "   lua_shared"
	@echo "   scanning"
	@echo "   detouring"
	@echo "   hde"
	@echo "   minhook"
	@echo "   common"
	@echo "   tier1"
	@echo "   LZMA"
	@echo "   tier2"
	@echo "   mathlib"
	@echo "   helpers_extended"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"